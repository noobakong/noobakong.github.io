(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{502:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("node中的module.exports与exports的联系与区别以及模块查找工作机制（require）")])]),s._v(" "),t("h3",{attrs:{id:"module-exports-和-exports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module-exports-和-exports"}},[s._v("#")]),s._v(" Module.exports 和 exports")]),s._v(" "),t("blockquote",[t("p",[s._v("在node中，没有全局作用域，只有模块作用域，外部访问不到内部，内部也访问不到外部,那么模块间如何通信")])]),s._v(" "),t("ul",[t("li",[s._v("当加载一个模块的时候，被加载模块的代码在第一次加载的时候会执行一遍")])]),s._v(" "),t("h4",{attrs:{id:"module-exports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module-exports"}},[s._v("#")]),s._v(" module.exports")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("被加载模块可以使用 node 提供 的 module.exports  来绝对向外暴露的内容（不设置的话默认为一个空对象）   "),t("em",[s._v("module 在node.js 模块中一般都表示本模块的意思")])]),s._v(" "),t("blockquote",[t("p",[s._v("require 函数真是实现：")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" module "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" exports"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// exports 默认为空对象")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" exports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 模块代码在这。在这个例子中，定义了一个函数。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("someFunc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" someFunc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时，exports 不再是一个 module.exports 的快捷方式，")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 且这个模块依然导出一个空的默认对象。")]),s._v("\n    module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" someFunc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时，该模块导出 someFunc，而不是默认对象。")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])])]),s._v(" "),t("p",[s._v("####　exprot")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("export")]),s._v(" 和 "),t("code",[s._v("module.exports")]),s._v(" 指向的是同一个对象地址")])]),s._v(" "),t("li",[t("p",[s._v("最终 "),t("code",[s._v("require()")]),s._v(" 函数返回的是 "),t("code",[s._v("module.exports")]),s._v("  中的数据")]),s._v(" "),t("p",[s._v("以当 "),t("code",[s._v("module.exports")]),s._v(" 属性被一个新的对象完全替代时 , "),t("code",[s._v("require")]),s._v(" 的数据肯定也会变成新值；但是，如果给 "),t("code",[s._v("export")]),s._v(" 对象改变地址的话， "),t("code",[s._v("module.exports")]),s._v("不会改变， "),t("code",[s._v("requrie")]),s._v("的值自然也就不会发生变化；"),t("strong",[s._v("可以将 "),t("code",[s._v("export")]),s._v(" 想象成 "),t("code",[s._v("module.exports")]),s._v(" 的快捷方式")])])])]),s._v(" "),t("h4",{attrs:{id:"module-exports与exports的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module-exports与exports的区别"}},[s._v("#")]),s._v(" module.exports与exports的区别")]),s._v(" "),t("p",[s._v("每一个node.js执行文件，都会创建一个module对象，同时，module对象会创建一个叫 exports 的属性，初始化的值是 { }")]),s._v(" "),t("blockquote",[t("p",[s._v("module.exports = { }")])]),s._v(" "),t("p",[s._v("在模块的结尾，会将 module.exports 返回")]),s._v(" "),t("blockquote",[t("p",[s._v("return module.exports")])]),s._v(" "),t("p",[s._v("说白了，exprots 是 "),t("strong",[s._v("引用")]),s._v("的 module.exprots的值，moudule.exprots 被改变的时候 ， exprots 不会被改变。 而模块导出的时候，真正导出的是 module.exprots， 而不是 exprots")]),s._v(" "),t("h4",{attrs:{id:"实例解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例解析"}},[s._v("#")]),s._v(" 实例解析")]),s._v(" "),t("p",[s._v("同目录下创建两个文件, "),t("code",[s._v("a.js")]),s._v(", 和 "),t("code",[s._v("b.js")])]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("a.js")]),s._v("写入代码, 输出foo来看看b.js导出的模块到底是什么")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("b.js 什么也不写的情况下,")]),s._v(" "),t("blockquote",[t("p",[s._v("{ }")])]),s._v(" "),t("p",[s._v("执行a.js 输出 一个空对象， 这也说明了我们的模块默认导出一个空对象")])]),s._v(" "),t("li",[t("p",[s._v("b.js 代码如下")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时 执行 a.js 输出 ：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  { a: 1 }")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("b.js 代码如下")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时 执行 a.js 输出 ：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  { a: 1 }")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("两句语句的操作其实是操作同一块对象地址，所以以最后的为准 a.js执行输出为1")])]),s._v(" "),t("li",[t("p",[s._v("b.js 代码如下")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时 执行 a.js 输出 ：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  { a: 2 }")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("此时执行结果变为 2  为什么？")]),s._v(" "),t("p",[s._v("因为第次赋值操作的时候，本质是改变了 moudule.exprots 的地址， 为 module.exports 开辟了一块新的地址来存储数据 ，而 exprots 还是 连接着 原来的共享地址。 而模块最后导出的是 module.exports 这样应该就能理解其中的原因了吧")])]),s._v(" "),t("li",[t("p",[s._v("来一个复杂的")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module.exports = {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   a: 'aaa'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }  ")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module.exports = {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   a: 'aaa',")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   b: 123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }  ")]),s._v("\n\nexports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时 exports 和 module.exprots 断开联系，不再是同一片地址")]),s._v("\n\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hahaha'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module.exports = {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   a: 'hahaha',")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   b: 123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }  ")]),s._v("\n\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 断开联系 赋值无法作用与 modul.exports")]),s._v("\n\nexports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 又指向同一片地址")]),s._v("\n\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("789")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// module.exports = {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   a: 'hahaha',")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   b: 789")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// } ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("最后输出  "),t("code",[s._v("{ a: 'hahaha', b: 789 }")])])])]),s._v(" "),t("h3",{attrs:{id:"require"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[s._v("#")]),s._v(" require")]),s._v(" "),t("p",[s._v("require一般导入下列三种包")]),s._v(" "),t("ul",[t("li",[s._v("内置核心模块")]),s._v(" "),t("li",[s._v("第三方模块")]),s._v(" "),t("li",[s._v("用户自己的模块")])]),s._v(" "),t("blockquote",[t("p",[s._v("不可能有任何一个第三方包和核心模块的名字是一样的")])]),s._v(" "),t("h4",{attrs:{id:"模块查找机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块查找机制"}},[s._v("#")]),s._v(" 模块查找机制")]),s._v(" "),t("ol",[t("li",[s._v("优先缓存")]),s._v(" "),t("li",[s._v("核心模块")]),s._v(" "),t("li",[s._v("路径形式的文件模块")]),s._v(" "),t("li",[s._v("第三方模块")])]),s._v(" "),t("p",[s._v("当 Node 执行 require(A) 时，按下面处理")]),s._v(" "),t("h5",{attrs:{id:"_1-当-a-是-内置模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-当-a-是-内置模块"}},[s._v("#")]),s._v(" 1.  "),t("strong",[s._v("当 A 是 内置模块")])]),s._v(" "),t("p",[s._v("a, 返回该模块")]),s._v(" "),t("p",[s._v("b, 不在执行")]),s._v(" "),t("h5",{attrs:{id:"_2-当-a-是-开头的路径请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-当-a-是-开头的路径请求"}},[s._v("#")]),s._v(" 2. "),t("strong",[s._v("当 A 是 './'   '/'  '../' 开头的路径请求")])]),s._v(" "),t("p",[s._v("a, 确定 A 所在的父模块， 确定 A 的 绝对路径")]),s._v(" "),t("p",[s._v("b, 将 A 当成文件 依次查找")]),s._v(" "),t("ul",[t("li",[s._v("A")]),s._v(" "),t("li",[s._v("A.js")]),s._v(" "),t("li",[s._v("A.json")]),s._v(" "),t("li",[s._v("A.node")])]),s._v(" "),t("blockquote",[t("p",[s._v("只要其中有一个存在，就返回该文件，不再继续执行")])]),s._v(" "),t("p",[s._v("c, 将 A 当成目录文件夹， 查找 A 文件夹下的下列文件")]),s._v(" "),t("ul",[t("li",[s._v("A/package.json")]),s._v(" "),t("li",[s._v("A/index.js")]),s._v(" "),t("li",[s._v("A/index.json")]),s._v(" "),t("li",[s._v("A/index.node")])]),s._v(" "),t("h5",{attrs:{id:"_3-当-a-属于第三方模块的时候"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-当-a-属于第三方模块的时候"}},[s._v("#")]),s._v(" 3. "),t("strong",[s._v("当 A 属于第三方模块的时候")])]),s._v(" "),t("blockquote",[t("p",[s._v("假想当前脚本文件 /home/akong/projects/foo.js 执行了 require('bar')")])]),s._v(" "),t("p",[s._v("/home/akong/projects/node_modules/bar\n/home/akong/node_modules/bar\n/home/node_modules/bar\n/node_modules/bar")]),s._v(" "),t("p",[s._v("node 会按照上面的顺序依次向上级的node_modules搜索bar")]),s._v(" "),t("p",[s._v("搜索时，node会先 bar 当成文件名 依次尝试加载下面这些文件，只要有一个成功就返回")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("bar\nbar.js\nbar.json\nbar.node\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("如果都不成功，就将bar当做文件夹，搜索下面的文件")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("bar/package.json（main字段）\nbar/index.js\nbar/index.json\nbar/index.node\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"杂记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#杂记"}},[s._v("#")]),s._v(" 杂记")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在node中，全局模块的使用不需要加载，而非全局模块则需要加载。")]),s._v(" "),t("p",[s._v("process 模块在使用的时候无需通过 require( )来加载该函数，可以直接使用，而 fs 模块不是全局模块，需要加载来使用  "),t("code",[s._v("var fs = require('fs')")])])]),s._v(" "),t("li",[t("p",[s._v("Node 即是单线程的，又是异步非阻塞I/O")])]),s._v(" "),t("li",[t("p",[s._v("data 参数的数据类型是一个 buffer 对象 ，里面保存的就是一个一个的字节（理解为字符数组）\n把buffer对象转化为字符串，用"),t("code",[s._v("toString")]),s._v("方法 默认 "),t("code",[s._v("utf8")])])]),s._v(" "),t("li",[t("p",[s._v("文件操作的 "),t("code",[s._v("./")]),s._v(" 相对路径，相对的是执行 node 命令的路径")]),s._v(" "),t("blockquote",[t("p",[s._v("解决：")]),s._v(" "),t("p",[t("code",[s._v("__durbane")]),s._v("：表示当前正在执行的 js 文件所在的目录")]),s._v(" "),t("p",[t("code",[s._v("__filename")]),s._v(": 表示当前正在执行的 js 文件的完整路径")]),s._v(" "),t("p",[s._v("两者都是本地变量，使用时不用加载")])]),s._v(" "),t("p",[s._v("使用路径拼接的时候我们可以使用node提供的一个"),t("strong",[s._v("path模块")]),s._v("，他可以更智能的识别反斜杠的存在和操作系统的兼容性，是我们的程序更简洁，兼容性更好")])]),s._v(" "),t("li",[t("p",[s._v("node 错误优先规则，在node回调中，一般都是用err当做第一个回调参数")])]),s._v(" "),t("li",[t("p",[s._v("try-catch 只能捕获 同步中的错误，异步中的错误无法用 trycatch来捕获，对于异步操作，要通过判断错误号（err.code）来进行出错处理")])]),s._v(" "),t("li",[t("p",[s._v("在请求服务器的时候，请求的url就只是一个标识，无其他作用")])]),s._v(" "),t("li",[t("p",[s._v("require 模块加载是同步的")])]),s._v(" "),t("li",[t("p",[s._v("当加载一个模块的时候，被加载模块的代码在第一次加载的时候会执行一遍，并缓存起来，后续加载的话就不会执行代码")])]),s._v(" "),t("li",[t("p",[s._v("node.js 遵循了 CommonJS 语法规范")])]),s._v(" "),t("li",[t("p",[s._v("在node中，没有全局作用域，只有模块作用域，外部访问不到内部，内部也访问不到外部")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);