(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{517:function(o,t,_){"use strict";_.r(t);var e=_(4),p=Object(e.a)({},(function(){var o=this,t=o.$createElement,_=o._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[_("blockquote",[_("p",[o._v("之前初学JavaScript的时候，被这两个东西搞得迷迷糊糊的，前两天看JS高程的时候，看到了prototype，自己好好的总结了一下")])]),o._v(" "),_("h2",{attrs:{id:"谈谈对prototype和-proto-的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#谈谈对prototype和-proto-的理解"}},[o._v("#")]),o._v(" 谈谈对"),_("code",[o._v("prototype")]),o._v("和"),_("code",[o._v("__proto__")]),o._v("的理解")]),o._v(" "),_("h3",{attrs:{id:"_1-构造函数，原型对象，实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-构造函数，原型对象，实例"}},[o._v("#")]),o._v(" 1. 构造函数，原型对象，实例")]),o._v(" "),_("p",[o._v("构造函数的原型属性 "),_("code",[o._v("prototype")]),o._v("指向了原型对象，在原型对象有的属性和方法，构造函数构造出的实例都可以继承共享，不是很恰当的说，如果构造函数是实例的爹，那么原型对象就是构造函数的爹，也就是实例爹的爹，爷爷。")]),o._v(" "),_("blockquote",[_("p",[o._v("构造函数是函数")]),o._v(" "),_("p",[o._v("原型对象的对象")]),o._v(" "),_("p",[o._v("实例也是是对象")])]),o._v(" "),_("p",[o._v("以下列代码为例：")]),o._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("function")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[o._v("Foo")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("{")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("}")]),o._v("\nfoo "),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("=")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("new")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[o._v("Foo")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),o._v("\n")])]),o._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[o._v("1")]),_("br"),_("span",{staticClass:"line-number"},[o._v("2")]),_("br")])]),_("p",[o._v("上面代码创造了一个构造函数，并new了一个Foo的实例foo，我们可以在控制台打印下面代码")]),o._v(" "),_("p",[_("img",{attrs:{src:"https://blog-1257919906.cos.ap-guangzhou.myqcloud.com/image/notes/js-%E5%8E%9F%E5%9E%8B2.png",alt:"1536647396354"}})]),o._v(" "),_("p",[o._v("可以很明显看到，Foo构造函数是一个function，而foo实例和Foo.prototype原型对象都是对象")]),o._v(" "),_("h3",{attrs:{id:"_2-关系示意图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-关系示意图"}},[o._v("#")]),o._v(" 2. 关系示意图")]),o._v(" "),_("p",[_("img",{attrs:{src:"https://blog-1257919906.cos.ap-guangzhou.myqcloud.com/image/notes/js-%E5%8E%9F%E5%9E%8B1.jpg",alt:""}})]),o._v(" "),_("h3",{attrs:{id:"_3-详解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-详解"}},[o._v("#")]),o._v(" 3. 详解")]),o._v(" "),_("blockquote",[_("p",[o._v("prototype 是属于一个函数特有的属性，而 "),_("code",[o._v("__proto__")]),o._v("一般存在于对象之中")])]),o._v(" "),_("ul",[_("li",[_("p",[o._v("Foo函数作为一个构造函数，它的的prototype指向它的原型，Foo.prototype是一个对象，里面的属性和方法能传给Foo构造的实例之中。")])]),o._v(" "),_("li",[_("p",[o._v("而Foo.prototype这的对象有一个属性 为 "),_("strong",[_("code",[o._v("constructor")])]),o._v(" （构造器属性），constructor属性指向原型对象对应的构造函数，也就是指向 Foo  "),_("code",[o._v("foo.constructor --\x3e ƒ Foo() {}")])])]),o._v(" "),_("li",[_("p",[o._v("对象具有"),_("code",[o._v("__proto__")]),o._v(" 可称为隐式原型，一个对象的隐式原型，指向"),_("strong",[o._v("构造改对象(foo)的构造函数(Foo)的原型(Foo.prototype)")]),o._v("，这也保证了实例能够访问继承构造函数原型对象中的属性和方法")]),o._v(" "),_("p",[o._v("所以，"),_("code",[o._v("foo.__porto__ === Foo.prototype")])])]),o._v(" "),_("li",[_("p",[o._v("对象没有prototype属性，所以 "),_("code",[o._v("foo.prototype = undefined")])])]),o._v(" "),_("li",[_("p",[o._v("但是函数可以有"),_("code",[o._v("__proto__")]),o._v("属性，因为函数的本质也是一个对象")]),o._v(" "),_("p",[o._v("Foo是一个方法，既一个函数，函数本身也是一个特殊的对象，把Foo作为一个对象来看，它的"),_("code",[o._v("__proto__")]),o._v("指向Foo构造函数本身的构造函数的原型，Foo构造函数的构造函数是是"),_("code",[o._v("Function")])]),o._v(" "),_("p",[_("code",[o._v("Foo.constructor --\x3e ƒ Function() { [native code] }")]),o._v("   (后者即是Function)")]),o._v(" "),_("p",[_("code",[o._v("Foo.constructor === Function")]),o._v("  // true")]),o._v(" "),_("p",[_("code",[o._v("Foo.constructor.prototype === Foo.__proto__")]),o._v("   // true")]),o._v(" "),_("p",[_("code",[o._v("Function.prototype === Foo.__proto__")]),o._v("   // true")])]),o._v(" "),_("li",[_("p",[o._v("原型对象是对象，也有"),_("code",[o._v("__proto__")]),o._v("属性，我们可以在控制台打印 "),_("code",[o._v("Foo.prototype.__proto__")]),o._v("发现出现了一个对象，里面有很多属性 包括 constructor， hasOwnProperty， isPrototypeOf，等等的方法")]),o._v(" "),_("p",[o._v("其实这个对象就是Object.prototype， 而Object就是这个原型对象的构造函数")]),o._v(" "),_("blockquote",[_("p",[o._v("这里的Object是一个构造函数，不是一个对象，不要搞错，typeof(Object) --\x3e function")])])]),o._v(" "),_("li",[_("p",[o._v("最后我们看一下Object.prototype这个对象的"),_("code",[o._v("__proto__")]),o._v("属性，我们会发现为Null")]),o._v(" "),_("p",[_("code",[o._v("Object.prototype.__proto__")]),o._v("  //  null")])]),o._v(" "),_("li",[_("p",[_("code",[o._v("Function.prototype === Function.__proto__")]),o._v(" // true")]),o._v(" "),_("p",[o._v("Function的原型和Function的"),_("code",[o._v("__proto__")]),o._v("竟然全等，构造Function的构造函数的原型 等于 Function的原型")]),o._v(" "),_("p",[o._v("我们发现一个有趣的东西   "),_("code",[o._v("Function")]),o._v(" 是由 "),_("code",[o._v("Function")]),o._v(" 构造的 ，Function可以看成是调用其自身的new操作的实例化的结果，哈哈 有点意思，没爹，自己把自己搞出来了。。")]),o._v(" "),_("p",[o._v("我们接着试探，发现"),_("code",[o._v("Function.prototype")]),o._v("当做一个对象来看，他的构造函数是Object( )函数，那么"),_("code",[o._v("Function.prototype.__proto")]),o._v("也就是Object的原型了")]),o._v(" "),_("p",[o._v("所以 "),_("code",[o._v("Function.prototype.__proto__ ===Object.prototype")]),o._v("  // true")])])]),o._v(" "),_("h3",{attrs:{id:"_4-总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[o._v("#")]),o._v(" 4. 总结")]),o._v(" "),_("ul",[_("li",[o._v("对象有属性__proto__,指向该对象的构造函数的原型对象")]),o._v(" "),_("li",[o._v("方法除了有属性__proto__,还有属性prototype，prototype指向该方法的原型对象")]),o._v(" "),_("li",[o._v("函数(Function也是函数)是new Function的结果，所以函数可以作为实例对象，其构造函数是Function()，原型对象是Function.prototype")]),o._v(" "),_("li",[o._v("对象(函数也是对象)是new Object的结果，所以对象可以作为实例对象，其构造函数是Object()，原型对象是Object.prototype")]),o._v(" "),_("li",[o._v("Object.prototype的原型对象是null")])])])}),[],!1,null,null,null);t.default=p.exports}}]);