(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{498:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("最近在读张鑫旭大神的CSS世界一书，收货很多，记录下的读书笔记。")])]),t._v(" "),a("h1",{attrs:{id:"流-元素-基本尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流-元素-基本尺寸"}},[t._v("#")]),t._v(" 流 元素 基本尺寸")]),t._v(" "),a("blockquote",[a("p",[t._v("流之所以影响整个css世界，是因为它影响了css世界的基石 --HTML")])]),t._v(" "),a("p",[t._v("HTML 常见的标签有div、 p、 li和table以及span、 img、 strong和em等。虽然标签种类繁多，但通常我们就把它们分为两类： 块级元素（block-level element）和内联元素（inline element）。")]),t._v(" "),a("h2",{attrs:{id:"_1-块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-块级元素"}},[t._v("#")]),t._v(" 1.块级元素")]),t._v(" "),a("h3",{attrs:{id:"_1-1-概念相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-概念相关"}},[t._v("#")]),t._v(" 1.1 概念相关")]),t._v(" "),a("p",[t._v("“块级元素”对应的英文是 block-level element，常见的块级元素有 "),a("code",[t._v("div")]),t._v(","),a("code",[t._v("li")]),t._v(","),a("code",[t._v("table")]),t._v("等。")]),t._v(" "),a("p",[a("strong",[t._v("块级元素和 "),a("code",[t._v("display：block")]),t._v(" 不是一个概念")])]),t._v(" "),a("p",[t._v("例如块级元素 li 和 table ，他们的 display 的值分别为 list-item 和 table")]),t._v(" "),a("p",[t._v("块级元素具有换行性质，也就是一个"),a("strong",[t._v("水平流")]),t._v("上只能单独显示一个元素，多个块级元素则换行显示；")]),t._v(" "),a("p",[a("strong",[t._v("由于这种 换行性质，理论上块级元素都可以配合 clear 属性来清除浮动带来的影响")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clear:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 也可以是 block，或者是 list-item\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("实际开发中，display的值要么是block，要么是table，并不会使用list-item")]),t._v(" "),a("h3",{attrs:{id:"_1-2-为什么-list-item会出现项目符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-为什么-list-item会出现项目符号"}},[t._v("#")]),t._v(" 1.2 为什么 list-item会出现项目符号")]),t._v(" "),a("blockquote",[a("p",[t._v("所有的块级元素都有一个主盒子，而list-item除了主盒子，还有一个附加盒子")])]),t._v(" "),a("p",[t._v("list-item 之所以会出现项目符号(小黑点)，是因为生成了一个附加盒子，学名为 “标记盒子”，专门来存放圆点，数字这些项目符号")]),t._v(" "),a("p",[t._v("IE不支持display：list-item 的原因可能就是因为IE无法创建 这个标记盒子的原因。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-display-inline-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-display-inline-block"}},[t._v("#")]),t._v(" 1.3 display:inline-block")]),t._v(" "),a("p",[a("code",[t._v("display:inline-block")]),t._v(" 我们可以把一个这样的元素分为两个部分组成，外在的inline内联盒子，里面的block块级盒子组成。这样，由于外在的外联盒子，它的呈现方式既可以和文字等元素同为一行，又因为内在的块级盒子，它可以设置元素的宽高。")]),t._v(" "),a("p",[t._v("于是，按照display的属性值不同")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("display")]),t._v(" "),a("th",[t._v("外盒子")]),t._v(" "),a("th",[t._v("内盒子")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("block")]),t._v(" "),a("td",[t._v("block")]),t._v(" "),a("td",[t._v("block")])]),t._v(" "),a("tr",[a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("inline")])]),t._v(" "),a("tr",[a("td",[t._v("inline-block")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("block")])]),t._v(" "),a("tr",[a("td",[t._v("table")]),t._v(" "),a("td",[t._v("block")]),t._v(" "),a("td",[t._v("table")])]),t._v(" "),a("tr",[a("td",[t._v("inline-table")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("table")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("外盒子影响着流的走向，内盒子控制元素的基本属性")])]),t._v(" "),a("h2",{attrs:{id:"_2-width-height-作用的具体细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-width-height-作用的具体细节"}},[t._v("#")]),t._v(" 2. width/height 作用的具体细节")]),t._v(" "),a("blockquote",[a("p",[t._v("我们在上面已经说过， width/height等属性作用在内盒子中，也就是容器盒子中。接下来我们说一下具体的作用细节。")])]),t._v(" "),a("p",[t._v("流特性体现在水平方向上，我们来讨论width")]),t._v(" "),a("h3",{attrs:{id:"_2-1-width-auto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-width-auto"}},[t._v("#")]),t._v(" 2.1 width:auto")]),t._v(" "),a("blockquote",[a("p",[t._v("width的默认值就是auto")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("充分利用空间 -- div的默认宽度一般都是100%")])]),t._v(" "),a("li",[a("p",[t._v("收缩和包裹")])]),t._v(" "),a("li",[a("p",[t._v("收缩到最小 -- min-content")]),t._v(" "),a("p",[t._v("当每一列空间都不够的时候，文字能断就断，但中文是随便断的，英文单词不能断。")])]),t._v(" "),a("li",[a("p",[t._v("超出容器限制")]),t._v(" "),a("p",[t._v("没有相关设置的情况下，一般元素不会主动超过父级宽度容器，除非一些特殊情况")]),t._v(" "),a("p",[t._v("例如：内容而很长的连续英文和数字")]),t._v(" "),a("p",[t._v("​\t    或者内联元素被设置了 white-space:nowrap 属性")])])]),t._v(" "),a("p",[t._v("在 CSS 世界中，盒子分“内在盒子”和“外在盒子”，显示也分“内部显示”和“外部显示”，同样地，尺寸也分“内部尺寸”和“外部尺寸”。")]),t._v(" "),a("p",[t._v("上述的width：auto 的四条特性里面，是默认宽度 100%显示，是“外部尺寸”，其余全部是“内部尺寸”。而这唯一的**“外部尺寸”，是“流”的精髓所在。**")]),t._v(" "),a("h3",{attrs:{id:"_2-2-外部尺寸与流体特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-外部尺寸与流体特性"}},[t._v("#")]),t._v(" 2.2 外部尺寸与流体特性")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("正常流宽度。")])]),t._v(" "),a("p",[t._v("当我们在一个容器里倒入足量的水时，水一定会均匀铺满整个容器。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("默认为inline的a元素display设置为block，本身就是表示宽度铺满整个父级，后面的100%宽度就不用再加了。")]),t._v(" "),a("p",[t._v("作者总结过一套"),a("strong",[t._v("三无准则")]),t._v(": 无宽度，无图片，无浮动。")]),t._v(" "),a("p",[t._v("其中无宽度的原因就是因为一旦外部尺寸的块级元素设置了宽度，其流动性就丢失了。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("格式化宽度")])]),t._v(" "),a("p",[t._v("格式化宽度仅出现在“绝对定位模型”中，也就是出现在 position属性值为 absolute 或 fixed 的元素中。在默认情况下，绝对定位元素的宽度表现是“包裹性”，宽度由内部尺寸决定")]),t._v(" "),a("p",[t._v("但是有一种情况其宽度是由外部尺寸所决定的，例如：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("假设该元素最近的具有定位特性的祖先元素的宽度是 1000 像素，则这个元素的宽度是 960（即 1000−20−20）像素。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-内部尺寸与流体特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-内部尺寸与流体特性"}},[t._v("#")]),t._v(" 2.3 内部尺寸与流体特性")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓“内部尺寸”，简单来讲就是元素的尺寸由内部的元素决定，而非由外部的容器决定。")])]),t._v(" "),a("p",[t._v("如何判断一个元素是否为内部尺寸呢？")]),t._v(" "),a("p",[t._v("​\t假如这个元素里面没有内容，宽度就是 0，那就是应用的“内部尺寸”。")]),t._v(" "),a("p",[t._v("“内部尺寸”有下面 3 种表现形式：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("包裹性。")])]),t._v(" "),a("p",[t._v("“包裹性”，除了“包裹”，还有“自适应性”。“自适应性”是区分后面两种尺寸表现很重要的一点。自适应，指的是元素尺寸由内部元素决定。")]),t._v(" "),a("p",[t._v("按钮就是 CSS 世界中极具代表性的 inline-block 元素，可谓展示“包裹性”最好的例子，具体表现为：按钮文字越多宽度越宽（内部尺寸特性），但如果文字足够多，则会在容器的宽度处自动换行（自适应特性）。")]),t._v(" "),a("p",[a("strong",[t._v("“包裹性”对实际开发的作用")])]),t._v(" "),a("blockquote",[a("p",[t._v("请看这个需求：页面某个模块的文字内容是动态的，可能是几个字，也可能是一句话。然\n后，希望文字少的时候居中显示，文字超过一行的时候居左显示。该如何实现？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://demo.cssworld.cn/3/2-5.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方演示代码连接"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("首选最小宽度")])]),t._v(" "),a("blockquote",[a("p",[t._v("在 CSS 世界中，图片和文字的权重要远大于布局，因此，CSS 的设计者显然是不会让图文在 width:auto 时宽度变成 0 的，此时所表现的宽度就是“首选最小宽度”。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("汉字最小宽度是每个字的宽度")])]),t._v(" "),a("li",[a("p",[t._v("英文最小宽度是由连续的英文字符单元决定，终止于空格，短横线及其他非字母符号")]),t._v(" "),a("p",[a("em",[t._v("想让英文字符和中文一样一个字符为最小宽度，可以使用css中的 word-break:break-all 属性")])])]),t._v(" "),a("li",[a("p",[t._v("类似图片这样的替换元素的最小宽度就是该元素内容本身的宽度")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("最大宽度")])]),t._v(" "),a("blockquote",[a("p",[t._v("最大宽度就是元素可以有的最大宽度。")])]),t._v(" "),a("p",[t._v("如果内部没有块级元素或者块级元素没有设定宽度值，则“最大宽度”实际上是最大的连续内联盒子的宽度。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-4-width-值作用的细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-width-值作用的细节"}},[t._v("#")]),t._v(" 2.4 width 值作用的细节")]),t._v(" "),a("blockquote",[a("p",[t._v("对于一个元素，我们设定其宽度为 100px，如下：div { width: 100px; }\n请问，100px 的宽度是如何作用到这个元素上的？")])]),t._v(" "),a("p",[t._v("width 是作用在“内在盒子”上的,实际上，这个内在盒子是由很多部分组成 --- "),a("strong",[t._v("盒子模型")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.runoob.com/images/box-model.gif",alt:"盒子模型"}})]),t._v(" "),a("p",[t._v("我们的这个“内在盒子”又被分成了 4 个盒子，分别是 content box、padding box、border box和 margin box")]),t._v(" "),a("p",[t._v("“margin 的背景永远是透明的”，因此不可能作为 backgound-clip 或 backgroundorigin属性值出现。margin 一旦设定具体宽度和高度值，其本身的尺寸是不会因 margin值变化而变化的。")]),t._v(" "),a("p",[a("strong",[t._v("width宽度作用在content盒子上")])]),t._v(" "),a("p",[t._v("假设一个盒子的css如下：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("那么它的宽度就变成了 100 + 20x2 + 20x2 = 180 px 了")]),t._v(" "),a("p",[t._v("合情合理，但是这种机制会导致以下问题：")]),t._v(" "),a("ol",[a("li",[t._v("流动性丢失")]),t._v(" "),a("li",[t._v("与现实世界表现不一致的困扰")])]),t._v(" "),a("p",[t._v("有没有什么办法能避免这种盒子计算而导致的错位问题呢，方法之一就是采用书写方式约束，使用“宽度分离原则”")]),t._v(" "),a("h3",{attrs:{id:"_2-4-css流体布局下的宽度分原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-css流体布局下的宽度分原则"}},[t._v("#")]),t._v(" 2.4 CSS流体布局下的宽度分原则")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓“宽度分离原则”，就是 CSS 中的 width 属性不与影响宽度的 padding/border（有时候包括 margin）属性共存")])]),t._v(" "),a("p",[a("strong",[t._v("如何实现？")])]),t._v(" "),a("p",[t._v("分离，width 独立占用一层标签，而padding、border、margin 利用流动性在内部自适应呈现。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("p",[t._v("这里有一个div盒子")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("常规布局")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("此时宽度为102像素，我们现在希望元素内边框有20像素的留白，我们一般会想到的解决办法是加padding的值")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("ok 此时有了留白，但是我们发现宽度变成了 102 + 40 = 142px, 我们常规的会使用减少宽度来实现我们的要求")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 60px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 通过计算，减去 40 像素\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("要求实现了，但是如果我们是通过计算，才能达到我们想要的，以后的调试会有更多的麻烦。")])]),t._v(" "),a("li",[a("p",[t._v("宽度分离")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".father")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 102px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".son")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("嵌套一层标签，父元素定宽，子元素因为 width 使用的是默认值 auto，所以会如水流般自动填满父级容器。")]),t._v(" "),a("p",[t._v("宽度还是 102 像素，子元素的 content box 自动变成了 60 像素，和上面反例的表现一样。")]),t._v(" "),a("p",[t._v("也就是说，使用“宽度分离”后，咱们不需要烧脑子去计算了，而且页面结构反而更稳固。")]),t._v(" "),a("p",[t._v("这个做法的唯一缺点就是要多嵌套一层html标签，和对开发者极高的css要求水平。")]),t._v(" "),a("blockquote",[a("p",[t._v("针对这中情况，有没有即无需计算，又不用额外的套用标签而实现呢？ ----\x3e box-sizing")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-5-改变width-height-作用细节的-box-sizing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-改变width-height-作用细节的-box-sizing"}},[t._v("#")]),t._v(" 2.5 改变width/height 作用细节的 box-sizing")]),t._v(" "),a("p",[t._v("box-sizing 被直译为“盒尺寸”，实际上，其更准确的叫法应该是“盒尺寸的作用细节”，或者说得更通俗一点，叫“width 作用的细节”，也就是说，"),a("strong",[t._v("box-sizing 属性的作用是改变 width 的作用细节")]),t._v("。")]),t._v(" "),a("p",[t._v("正常情况下width作用在盒模型中的四个盒子中的content盒子上，box-sizing的作用就是可以把width作用的盒子变成其他的几个盒子上，有以下几种写法")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 默认值 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" padding-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Firefox 曾经支持 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 全线支持 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 从未支持过 */")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("拿 "),a("code",[t._v(".box3 { box-sizing: border-box; }")]),t._v("来说，就是把原来的宽度作用对象从content-box转到了border-box")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("此时这个盒子的宽度是100px\n\n.box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n这事的宽度还是100px\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"_2-6-height-auto-和-height-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-height-auto-和-height-100"}},[t._v("#")]),t._v(" 2.6 height: auto 和 height: 100%")]),t._v(" "),a("blockquote",[a("p",[t._v("宽度稀缺，高度无限，所以在css中高度较宽度更简单纯洁")])]),t._v(" "),a("p",[a("strong",[t._v("height: auto")])]),t._v(" "),a("p",[t._v("所有的元素盒子在页面中表现的每个有多高，加在一起，就是最终的高度值")]),t._v(" "),a("p",[a("strong",[t._v("height: 100%")])]),t._v(" "),a("p",[t._v("height 和 width 还有一个比较明显的区别就是对百分比单位的支持。对于 width 属性，就算父元素 width 为 auto，其百分比值也是支持的，但是对于 height 属性，如果父元素height 为 auto，只要子元素在文档流中，其百分比值完全就被忽略了。")]),t._v(" "),a("blockquote",[a("p",[t._v("对于普通文档流中的元素，百分比高度值要想起作用，其父级必须有一个可以生效的高度值。")])]),t._v(" "),a("p",[a("strong",[t._v("为何父级没有具体高度值的时候，height:100%会无效？")])]),t._v(" "),a("p",[t._v("如果包含块的高度没有显式指定（即高度由内容决定），并且该元素不是绝对定位，则计算值为auto。一句话总结就是：因为解释成了 auto。要知道，auto 和百分比计算，肯定是算\n不了的。")]),t._v(" "),a("p",[a("strong",[t._v("如何让元素支持 height:100%效果")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("设定显式的高度值。这个没什么好说的，例如，设置 height:600px，或者可以生效的百分比值高度。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html, body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("使用绝对定位。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("此时的 height:100%就会有计算值，即使祖先元素的 height 计算为 auto 也是如此。")]),t._v(" "),a("p",[t._v("绝对定位元素的百分比计算和非绝对定位元素的百分比计算是有区别的:")]),t._v(" "),a("p",[t._v("绝对定位的宽高百分比计算是相对于 padding box 的")]),t._v(" "),a("p",[t._v("非绝对定位元素则是相对于 content box 计算的")])])]),t._v(" "),a("h2",{attrs:{id:"_3-min-width-max-width和min-height-max-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-min-width-max-width和min-height-max-height"}},[t._v("#")]),t._v(" 3. min-width/max-width和min-height/max-height")]),t._v(" "),a("h3",{attrs:{id:"_3-1为流体而生的-min-width-max-width"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1为流体而生的-min-width-max-width"}},[t._v("#")]),t._v(" 3.1为流体而生的 min-width/max-width")]),t._v(" "),a("blockquote",[a("p",[t._v("网页宽度在 1200～1400 像素自适应，既满足大屏的大气，又满足笔记本的良好显示")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1400px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("无须 width 设置，直接使用 min-width/max-width")]),t._v(" "),a("p",[t._v("再比如一个图片的盒子宽度已定：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("height:auto 是必需的，否则，如果原始图片有设定 height，max-width 生效的时候，图片就会被水平压缩。强制 height 为 auto 可以确保宽度不超出的同时使图片保持原来的比例。但这样也会有体验上的问题，那就是在加载时图片占据高度会从 0 变成计算高度，图文会有明显的瀑布式下落。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-与众不同的初始值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-与众不同的初始值"}},[t._v("#")]),t._v(" 3.2 与众不同的初始值")]),t._v(" "),a("blockquote",[a("p",[t._v("width/height 的默认值是 auto，而 min-width/max-width 和 min-heigh/max-height 的初始值则要复杂些")])]),t._v(" "),a("p",[t._v("max-width 和 max-height 的初始值是 none")]),t._v(" "),a("p",[t._v("min-width 和 min-height 的初始值是 auto")]),t._v(" "),a("h3",{attrs:{id:"_3-3-超越-important，超越最大"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-超越-important，超越最大"}},[t._v("#")]),t._v(" 3.3 超越!important，超越最大")]),t._v(" "),a("p",[t._v("超越!important")]),t._v(" "),a("blockquote",[a("p",[t._v("min-width/max-width 和 min-height/max-height 属性间，以及与width 和 height 之间有一套相互覆盖的规则。这套规则用一句比较通俗的话概括就是:超越!important，超越最大。")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("480px"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nimg { max-width: 256px; }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("以上代码作用后，img的宽度为 max-width的宽度 -- 256px，style、!important 通通靠边站！因为 max-width 会覆盖 width。")]),t._v(" "),a("p",[t._v("超越最大")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1400px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("最小宽度居然比最大宽度设置得还大, 最后谁会生效？")]),t._v(" "),a("p",[t._v("遵循“超越最大”规则（注意不是“后来居上”规则），min-width 活下来，max-width 被忽略，于是，.container 元素表现为至少 1400 像素宽")]),t._v(" "),a("h3",{attrs:{id:"_3-4-任意高度元素的展开收起动画技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-任意高度元素的展开收起动画技术"}},[t._v("#")]),t._v(" 3.4 任意高度元素的展开收起动画技术")]),t._v(" "),a("blockquote",[a("p",[t._v("“展开收起”效果是网页中比较常见的一种交互形式，通常的做法是控制 display 属性值在 none 和其他值之间切换")])]),t._v(" "),a("p",[t._v("传统实现可以使用 jQuery 的 slideUp()/slideDown()方法")]),t._v(" "),a("p",[t._v("第一反应就是使用 height + overflow:hidden 实现。但是，很多时候，我们展开的元素内容是动态的，换句话说高度是不固定的，因此，height 使用的值是默认的 auto")]),t._v(" "),a("p",[t._v("因此，下面代码呈现的效果也是生硬地展开和收起：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" height .25s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element.active")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 没有 transition 效果，只是生硬地展开 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("auto 是个关键字值，并非数值，正如 height:100%的 100%无法和 auto 相计算一样，从 0px 到 auto 也是无法计算的，因此无法形成过渡或动画效果。")]),t._v(" "),a("p",[a("strong",[t._v("我们可以使用max-height来解决这一问题")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" max-height .25s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element.active")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 666px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一个足够大的最大高度值 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("展开后我的高度只要比max-height小，那么元素的高度就是height的计算高度，一个高度不定的任意元素的展开动画效果就能实现了。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://demo.cssworld.cn/3/3-2.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("css世界官方demo"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("注意： max-height值在保证比height大的情况下尽可能和的小")])]),t._v(" "),a("p",[t._v("因为max-height可能会影响动画的时间， 比方说，我们展开的元素高度是 100 像素，而 max-height 是 1000 像素，假如一个动画1000ms，则前 900 ms 我们是看不到收起效果的，因为max-height 从 1000 像素到 100 像素变化这段时间，元素不会有区域被隐藏，会给人动画延迟 900 ms 的感觉")]),t._v(" "),a("h2",{attrs:{id:"_4-内联元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-内联元素"}},[t._v("#")]),t._v(" 4. 内联元素")]),t._v(" "),a("h3",{attrs:{id:"_4-1-哪些是内联元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-哪些是内联元素"}},[t._v("#")]),t._v(" 4.1 哪些是内联元素")]),t._v(" "),a("p",[a("strong",[t._v("从定义：")])]),t._v(" "),a("p",[t._v("内联元素的内联指的是外在盒子，外在盒子表现为inline的元素都是内联元素。")]),t._v(" "),a("blockquote",[a("p",[t._v("inline-block 和 inline-table 都是“内联元素”，因为它们的\n“外在盒子”都是内联盒子。自然 display:inline 的元素也是“内联元素”，那么，\n按钮元素是内联元素，因为其 display 默认值是 inline-block；img图片元素也是内联\n元素，因为其 display 默认值是 inline 等。")])]),t._v(" "),a("p",[a("strong",[t._v("从表现看:")])]),t._v(" "),a("blockquote",[a("p",[t._v("就行为表现来看，“内联元素”的典型特征就是可以和文字在一行显示。")])]),t._v(" "),a("p",[t._v("浮动元素貌似也是可以和文字在一个水平上显示的,但是浮动已经脱离文档流，不属于内联元素。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-内联世界深入的基础-内联盒模型-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-内联世界深入的基础-内联盒模型-import"}},[t._v("#")]),t._v(" 4.2 内联世界深入的基础—内联盒模型 (import)")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是一行普通的文字，这里有个 "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("em"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 标签。"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("看似普通，实际上包含了很多术语和概念，或者换种通俗的说法，包含了很多种盒子。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("内容区域")]),t._v(" "),a("p",[t._v("内容区域指一种围绕文字看不见的盒子，其大小仅受字符本身特性控制，本质上是一个字符盒子（character box）；但是有些元素，如图片这样的替换元素，其内容显然不是文字，不存在字符盒子之类的，因此，对于这些元素，内容区域可以看成元素自身。")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("这是一行普通的文字，这里有个 "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("em"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 标签。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("以上代码表现的区域，可以理解为内容区域。")])]),t._v(" "),a("li",[a("p",[t._v("内联盒子")]),t._v(" "),a("p",[t._v("如果外部含内联标签等），则属于“内联盒子”；如果是个光秃秃的文字，则属于“匿名内联盒子”")])]),t._v(" "),a("li",[a("p",[t._v("行框盒子（line box）")]),t._v(" "),a("p",[t._v("每一行就是一个“行框盒子”（实线框标注），每个“行框盒子”又是由一个一个“内联盒子”\n组成的。")])]),t._v(" "),a("li",[a("p",[t._v("包含盒子/包含块（containing box）")]),t._v(" "),a("p",[a("code",[t._v("<p>")]),t._v("标签就是一个“包含盒子”（实线框标注），此盒子由一行一行的“行框盒子”组成。")])])]),t._v(" "),a("h3",{attrs:{id:"_4-3-幽灵空白节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-幽灵空白节点"}},[t._v("#")]),t._v(" 4.3 幽灵空白节点")]),t._v(" "),a("blockquote",[a("p",[t._v("在 HTML5 文档声明中，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”一样。这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就好像幽灵一样，但又确确实实地存在，表现如同文本节点一样，因此，我称之为“幽灵空白节点”")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #cd0000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("浏览器打开上述代码，发现div的高度不是0，原因就在于幽灵空白节点。")]),t._v(" "),a("p",[t._v("“幽灵空白节点”实际上也是一个盒子，不过是个假想盒，名叫“strut”，中文直译为“支柱”，是一个存在于每个“行框盒子”前面，同时具有该元素的字体和行高属性的 0 宽度的内联盒。")]),t._v(" "),a("blockquote",[a("p",[t._v("Each line box starts with a zero-width inline box with the element’s font and line\nheight properties. We call that imaginary box a “strut”.")])]),t._v(" "),a("p",[a("em",[t._v("内容总结与 "),a("a",{attrs:{href:"https://www.zhangxinxu.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("张鑫旭"),a("OutboundLink")],1),t._v("大神 -- 《css世界》")])])])}),[],!1,null,null,null);s.default=e.exports}}]);